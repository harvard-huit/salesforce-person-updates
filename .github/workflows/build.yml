name: Build Image
run-name: Build Image ${{ github.event.inputs.version }}

on:
  push:
    branches: [ dev ]
    paths: 
        - 'src/**'
        - 'config.schema.json'
        - 'Dockerfile'
        - 'gunicorn.sh'
        - 'requirements.txt'
        - '.github/workflows/build.yml'
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true

env:
  version: ${{ github.event.inputs.version }}
  branch: ${{ github.ref_name }}

defaults:
  run:
    shell: bash

jobs:
  unittest:
    name: Running Unit tests
    runs-on: ubuntu-latest
    container:
      image: python:3.9
      options: --user root
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # with: 
        #   path: ./salesforce

      - name: Create virtual env
        run: |
          python -m venv env

      - name: Get requirements
        run: |
          source env/bin/activate
          python -m pip config --cache-dir env set global.extra-index-url https://artifactory.huit.harvard.edu/artifactory/api/pypi/ats-python/simple
          python -m pip install -r src/requirements.txt

      - name: Run tests
        run: | 
          source env/bin/activate
          python -m unittest discover -s src -p *_test.py    

  get_version:
    name: Get Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with: 
          path: ./checkout
      - name: Run the action
        id: get_version
        uses: HUIT/aais-ecs-infrastructure/actions/get-version@develop
        with:
          ansible_vars: ./checkout/ansible_vars/dev_ansible_vars.yml
    outputs:
      version: ${{ steps.get_version.outputs.version }}


  build:
    name: Build Code ${{ github.event.inputs.version }}
    needs: [unittest, get_version]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          path: ./checkout

      - name: Which Version
        id: which_version
        run: |
          if [ -z "${{ inputs.version }}" ]; then
            echo "Version from input: ${{ inputs.version }}"
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "Version from ansible_vars: ${{ needs.get_version.outputs.version }}"
            echo "version=${{ needs.get_version.outputs.version }}" >> $GITHUB_OUTPUT
          fi
      - name: Build
        run: |
          cd checkout
          docker build -t artifactory.huit.harvard.edu/aais-docker-local/salesforce-person-updates:${{ steps.which_version.outputs.version }} .

      - name: Push to Artifactory
        run: |
          docker login artifactory.huit.harvard.edu --username "${{ secrets.ARTIFACTORY_USER }}" --password "${{ secrets.ARTIFACTORY_PWD }}"
          docker push artifactory.huit.harvard.edu/aais-docker-local/salesforce-person-updates:${{ steps.which_version.outputs.version }}


  deploy:
    name: Deploy to Dev
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    needs: [get_version, build]
    uses: ./.github/workflows/deploy.yml
    with: 
      version: ${{ needs.get_version.outputs.version }}
      environment: dev
    secrets: inherit
        