name: Spot Data Update
run-name: Spot data update for ${{ inputs.salesforce_instance_id }} (${{ inputs.people }})

on:
  workflow_dispatch:
    inputs:
      environment: 
        type: choice
        default: 'dev'
        options:
          - 'dev'
          - 'test'
          - 'stage'
          - 'prod'
        required: true
      people:
        description: HUIDs (comma separated list?) 
        type: string
        required: true
        default: '<HUID>, <HUID>, <HUID>'
      salesforce_instance_id:
        description: the salesforce instance id (from dynamo)
        type: string
        required: true
        default: 'huit-full-sandbox'
      task_version:
        type: string
        required: false
        default: ''
        

defaults:
  run:
    shell: bash

jobs:
  spot_update: 
    name: Spot data update for ${{ inputs.people }} on ${{ inputs.salesforce_instance_id }}
    runs-on: [ ubuntu-latest ]
    environment: ${{ inputs.environment }}
    steps:

      - name: Login to AWS with a service account / iam user
        uses: HUIT/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_NONPROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_NONPROD }}
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: 'arn:aws:iam::${{ vars.AWS_ACCOUNT }}:role/AutomationDeployRole'
          role-duration-seconds: 1200
          role-session-name: MyDeploySession
          role-skip-session-tagging: true
          role-external-id: ${{ secrets.EXTERNAL_ID }}

      - name: get current identity
        run: aws sts get-caller-identity

      - name: Create Overrides
        run: |
          CONTAINER_OVERRIDES='[ 
            {
              "name": "aais-services-${{ inputs.environment }}-feed-salesforce-person-updates", 
              "environment": [ 
                {
                  "name": "SALESFORCE_INSTANCE_ID", 
                  "value": "${{ inputs.salesforce_instance_id }}"
                }, {
                  "name": "TABLE_NAME", 
                  "value": "${{ vars.TABLE_NAME }}"
                }, {
                  "name": "action", 
                  "value": "single-person-update"
                }, {
                  "name": "person_ids", 
                  "value": "[${{ inputs.people }}]"
                }
              ]
            } 
          ]'
          CONTAINER_OVERRIDES=$(echo "$CONTAINER_OVERRIDES" | tr -d '\n')
          echo "CONTAINER_OVERRIDES=$CONTAINER_OVERRIDES" >> $GITHUB_ENV

      - name: Run ${{ inputs.environment }} spot update on [${{ inputs.people }}]
        run: |
          aws ecs run-task \
            --cluster aais-services-${{ inputs.environment }}-cluster \
            --overrides '{"containerOverrides": ${{ env.CONTAINER_OVERRIDES }} }' \
            --task-definition arn:aws:ecs:us-east-1:${{ vars.AWS_ACCOUNT }}:task-definition/aais-services-${{ inputs.environment }}-feed-salesforce-person-updates \
            --network-configuration '{ "awsvpcConfiguration": { "assignPublicIp":"DISABLED", "securityGroups": ["${{ vars.SECURITY_GROUP }}"], "subnets": ["${{ vars.SUBNET }}"]}}' \
            --launch-type FARGATE
